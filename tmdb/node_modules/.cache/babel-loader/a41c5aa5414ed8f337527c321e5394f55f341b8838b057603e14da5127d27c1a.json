{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\Movies App\\\\tmdb\\\\src\\\\pages\\\\profile\\\\profile.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport './profile.css'; // Import CSS for styling\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = process.env.REACT_APP_BASE_URL;\nconst api_key = Process.env.REACT_APP_API_KEY;\nfunction Profile() {\n  _s();\n  const [fullMoviesData, setFullMoviesData] = useState([]);\n  const [isViewingFavorites, setIsViewingFavorites] = useState(false); // State to toggle favorite view\n  const [username, setUsername] = useState('');\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    if (token) {\n      const decoded = jwtDecode(token);\n      setUsername(decoded.username);\n      axios.get(`${base_url}/api/auth/getfavourites`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => {\n        const movieIds = res.data.favourites.map(fav => fav.movieId); // Extract movieIds\n\n        fetchMovieDetails(movieIds); // Fetch full movie details\n      }).catch(err => {\n        alert(err.message);\n      });\n    }\n  }, [token, fullMoviesData]);\n\n  // Fetch movie details using movieIds\n  const fetchMovieDetails = movieIds => {\n    const movieRequests = movieIds.map(movieId => axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=$&language=en-US`) // Replace with your actual API key\n    );\n\n    // Wait for all movie requests to complete\n    Promise.all(movieRequests).then(responses => {\n      const movieData = responses.map(res => res.data);\n      setFullMoviesData(movieData); // Store full movie data\n    }).catch(err => {\n      alert(\"Failed to fetch movie details: \" + err.message);\n    });\n  };\n  const deleteFavourites = id => {\n    const token = localStorage.getItem('token');\n    axios.delete(`${base_url}/api/auth/delete`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      data: {\n        movieId: id\n      }\n    }).then(() => {\n      console.log(\"deleted success\");\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n  const toggleFavoritesView = () => {\n    setIsViewingFavorites(!isViewingFavorites);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-cont\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"favorites-button\",\n        onClick: toggleFavoritesView,\n        children: isViewingFavorites ? 'Hide Favorites' : 'View Favorites'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), isViewingFavorites && fullMoviesData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"favorites-list\",\n        children: fullMoviesData.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n            alt: movie.original_title,\n            className: \"movie-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"movie-title\",\n              children: movie.original_title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"movie-runtime\",\n              children: movie.release_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"movie-description\",\n              children: [movie.overview.slice(0, 120), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              deleteFavourites(movie.id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), isViewingFavorites && fullMoviesData.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No favorites found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(Profile, \"k7+0JwVsnzLPUUtCyNMCdODu5as=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["axios","React","useEffect","useState","jwtDecode","jsxDEV","_jsxDEV","base_url","process","env","REACT_APP_BASE_URL","api_key","Process","REACT_APP_API_KEY","Profile","_s","fullMoviesData","setFullMoviesData","isViewingFavorites","setIsViewingFavorites","username","setUsername","token","localStorage","getItem","decoded","get","headers","Authorization","then","res","movieIds","data","favourites","map","fav","movieId","fetchMovieDetails","catch","err","alert","message","movieRequests","Promise","all","responses","movieData","deleteFavourites","id","delete","console","log","toggleFavoritesView","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","movie","index","src","poster_path","alt","original_title","release_date","overview","slice","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/Movies App/tmdb/src/pages/profile/profile.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './profile.css'; // Import CSS for styling\r\nimport {jwtDecode} from 'jwt-decode';\r\nconst base_url = process.env.REACT_APP_BASE_URL;\r\nconst api_key = Process.env.REACT_APP_API_KEY\r\nfunction Profile() {\r\n  \r\n    const [fullMoviesData, setFullMoviesData] = useState([]);\r\n    const [isViewingFavorites, setIsViewingFavorites] = useState(false); // State to toggle favorite view\r\n    const [username, setUsername] = useState('');\r\n    const token = localStorage.getItem('token');\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            const decoded = jwtDecode(token);\r\n            setUsername(decoded.username);\r\n            \r\n            axios\r\n                .get(`${base_url}/api/auth/getfavourites`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                .then((res) => {\r\n                    const movieIds = res.data.favourites.map(fav => fav.movieId); // Extract movieIds\r\n                    \r\n                    fetchMovieDetails(movieIds); // Fetch full movie details\r\n                })\r\n                .catch((err) => {\r\n                    alert(err.message);\r\n                });\r\n        }\r\n        \r\n    }, [token,fullMoviesData]);\r\n\r\n    // Fetch movie details using movieIds\r\n    const fetchMovieDetails = (movieIds) => {\r\n        const movieRequests = movieIds.map(movieId => \r\n            axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=$&language=en-US`) // Replace with your actual API key\r\n        );\r\n        \r\n        // Wait for all movie requests to complete\r\n        Promise.all(movieRequests)\r\n            .then((responses) => {\r\n                const movieData = responses.map(res => res.data);\r\n                setFullMoviesData(movieData); // Store full movie data\r\n            })\r\n            .catch((err) => {\r\n                alert(\"Failed to fetch movie details: \" + err.message);\r\n            });\r\n    };\r\n\r\n   const deleteFavourites=(id)=>{\r\n    const token = localStorage.getItem('token');\r\n        axios.delete(`${base_url}/api/auth/delete`,{\r\n            headers:{\r\n                Authorization:`Bearer ${token}`\r\n            },\r\n            data: {\r\n                movieId: id, \r\n              },\r\n        })\r\n        .then(()=>{console.log(\"deleted success\");\r\n        })\r\n        .catch((err)=>{alert(err.message);\r\n        })\r\n   }\r\n\r\n     \r\n\r\n    const toggleFavoritesView = () => {\r\n        setIsViewingFavorites(!isViewingFavorites); \r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"profile-cont\">\r\n            <div className=\"profile-header\">\r\n                <h1>Welcome, {username}</h1>\r\n            </div>\r\n\r\n            <div className=\"profile-body\">\r\n                <button className=\"favorites-button\" onClick={toggleFavoritesView}>\r\n                    {isViewingFavorites ? 'Hide Favorites' : 'View Favorites'}\r\n                </button>\r\n\r\n                {isViewingFavorites && fullMoviesData.length > 0 && (\r\n                    <div className=\"favorites-list\">\r\n                        {fullMoviesData.map((movie, index) => (\r\n                            <div key={index} className=\"movie-item\">\r\n                                <img\r\n                                    src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                                    alt={movie.original_title}\r\n                                    className=\"movie-image\"\r\n                                />\r\n                                <div className=\"movie-details\">\r\n                                    <h2 className=\"movie-title\">{movie.original_title}</h2>\r\n                                    <p className=\"movie-runtime\">{movie.release_date}</p>\r\n                                    <p className=\"movie-description\">{movie.overview.slice(0, 120)}...</p>\r\n                                </div>\r\n                                <button onClick={()=>{deleteFavourites(movie.id)}}>\r\n                                    Delete\r\n                                </button>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n\r\n                {isViewingFavorites && fullMoviesData.length === 0 && (\r\n                    <p>No favorites found.</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}