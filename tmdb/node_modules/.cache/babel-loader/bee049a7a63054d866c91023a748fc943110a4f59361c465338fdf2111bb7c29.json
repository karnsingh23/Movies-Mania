{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\Movies App\\\\tmdb\\\\src\\\\pages\\\\profile\\\\profile.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Cards from '../../components/card/card'; // Import the Card component\n// import './Profile.css'; // Import the CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const [favouritesMoviesId, setFavouritesMoviesId] = useState([]);\n  const [fullMoviesData, setFullMoviesData] = useState([]);\n  const [isViewingFavorites, setIsViewingFavorites] = useState(false); // State to toggle favorite view\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    if (token) {\n      // Fetch favorite movie IDs first\n      axios.get(\"http://localhost:3001/api/auth/getfavourites\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => {\n        const movieIds = res.data.favourites.map(fav => fav.movieId); // Extract movieIds\n        setFavouritesMovies(movieIds);\n        fetchMovieDetails(movieIds); // Fetch full movie details\n      }).catch(err => {\n        alert(err.message);\n      });\n    }\n  }, [token]);\n\n  // Fetch movie details using movieIds\n  const fetchMovieDetails = movieIds => {\n    const movieRequests = movieIds.map(movieId => axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=YOUR_API_KEY`) // Replace with your actual API key\n    );\n\n    // Wait for all movie requests to complete\n    Promise.all(movieRequests).then(responses => {\n      const movieData = responses.map(res => res.data);\n      setFullMoviesData(movieData); // Store full movie data\n    }).catch(err => {\n      alert(\"Failed to fetch movie details: \" + err.message);\n    });\n  };\n  const username = \"John Doe\"; // Replace this with the username fetched from the backend or token\n\n  const toggleFavoritesView = () => {\n    setIsViewingFavorites(!isViewingFavorites); // Toggle the display of favorites\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"favorites-button\",\n        onClick: toggleFavoritesView,\n        children: isViewingFavorites ? 'Hide Favorites' : 'View Favorites'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), isViewingFavorites && fullMoviesData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"favorites-list\",\n        children: fullMoviesData.map((movie, index) => /*#__PURE__*/_jsxDEV(Cards, {\n          movie: movie\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), isViewingFavorites && fullMoviesData.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No favorites found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Profile, \"41WY4HV+gqf3QUxpVRbDUjHPH+s=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["axios","React","useEffect","useState","Cards","jsxDEV","_jsxDEV","Profile","_s","favouritesMoviesId","setFavouritesMoviesId","fullMoviesData","setFullMoviesData","isViewingFavorites","setIsViewingFavorites","token","localStorage","getItem","get","headers","Authorization","then","res","movieIds","data","favourites","map","fav","movieId","setFavouritesMovies","fetchMovieDetails","catch","err","alert","message","movieRequests","Promise","all","responses","movieData","username","toggleFavoritesView","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","movie","index","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/Movies App/tmdb/src/pages/profile/profile.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Cards from '../../components/card/card'; // Import the Card component\r\n// import './Profile.css'; // Import the CSS for styling\r\n\r\nfunction Profile() {\r\n    const [favouritesMoviesId, setFavouritesMoviesId] = useState([]);\r\n    const [fullMoviesData, setFullMoviesData] = useState([]);\r\n    const [isViewingFavorites, setIsViewingFavorites] = useState(false); // State to toggle favorite view\r\n    const token = localStorage.getItem('token');\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            // Fetch favorite movie IDs first\r\n            axios\r\n                .get(\"http://localhost:3001/api/auth/getfavourites\", {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                .then((res) => {\r\n                    const movieIds = res.data.favourites.map(fav => fav.movieId); // Extract movieIds\r\n                    setFavouritesMovies(movieIds);\r\n                    fetchMovieDetails(movieIds); // Fetch full movie details\r\n                })\r\n                .catch((err) => {\r\n                    alert(err.message);\r\n                });\r\n        }\r\n    }, [token]);\r\n\r\n    // Fetch movie details using movieIds\r\n    const fetchMovieDetails = (movieIds) => {\r\n        const movieRequests = movieIds.map(movieId => \r\n            axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=YOUR_API_KEY`) // Replace with your actual API key\r\n        );\r\n        \r\n        // Wait for all movie requests to complete\r\n        Promise.all(movieRequests)\r\n            .then((responses) => {\r\n                const movieData = responses.map(res => res.data);\r\n                setFullMoviesData(movieData); // Store full movie data\r\n            })\r\n            .catch((err) => {\r\n                alert(\"Failed to fetch movie details: \" + err.message);\r\n            });\r\n    };\r\n\r\n    const username = \"John Doe\"; // Replace this with the username fetched from the backend or token\r\n\r\n    const toggleFavoritesView = () => {\r\n        setIsViewingFavorites(!isViewingFavorites); // Toggle the display of favorites\r\n    };\r\n\r\n    return (\r\n        <div className=\"profile-container\">\r\n            <div className=\"profile-header\">\r\n                <h1>Welcome, {username}</h1>\r\n            </div>\r\n\r\n            <div className=\"profile-body\">\r\n                <button className=\"favorites-button\" onClick={toggleFavoritesView}>\r\n                    {isViewingFavorites ? 'Hide Favorites' : 'View Favorites'}\r\n                </button>\r\n\r\n                {isViewingFavorites && fullMoviesData.length > 0 && (\r\n                    <div className=\"favorites-list\">\r\n                        {fullMoviesData.map((movie, index) => (\r\n                            <Cards movie={movie} key={index} />\r\n                        ))}\r\n                    </div>\r\n                )}\r\n\r\n                {isViewingFavorites && fullMoviesData.length === 0 && (\r\n                    <p>No favorites found.</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}